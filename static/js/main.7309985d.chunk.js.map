{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","fetchCoinTickers","coinId","Chart","isDark","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","x","time_close","y","open","toFixed","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","tooltip","formatter","value","Container","styled","div","cardAnimation","keyframes","Overview","OverviewItem","InfoTitle","PriceInfo","props","isPlus","Price","quotes","USD","market_cap","ath_price","percent_change_24h","percent_change_12h","percent_change_6h","percent_change_1h","percent_change_30m","Header","header","BackButton","textColor","Title","h1","accentColor","Loader","span","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","to","className","rank","symbol","description","total_supply","max_supply","path","CoinList","ul","li","cardBgColor","ModeChangeButton","Img","img","Coins","toggleDark","onClick","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","useState","setIsDark","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.7309985d.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n  isDark: boolean;\n}\n\nfunction Chart({ coinId, isDark }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2),\n                ],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 350,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: {\n              show: true,\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 2,\n            },\n            yaxis: {\n              show: true,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: true },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            // fill: {\n            //   type: \"gradient\",\n            //   gradient: {\n            //     gradientToColors: [\"#0be881\"],\n            //     stops: [0, 100],\n            //   },\n            // },\n            // colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled, { keyframes } from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId: string;\n}\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst cardAnimation = keyframes`\n 0% {\n    transform: translateY(-100px);\n    opacity: 0;\n  }\n\n  10% {\n    transform: translateY(45px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translate(0);\n    opacity: 1;\n  }\n`;\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  animation: ${cardAnimation} 0.5s linear forwards;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst InfoTitle = styled.div`\n  font-size: 17px;\n  margin: 5px 0px;\n`;\n\nconst PriceInfo = styled.div<{ isPlus?: Boolean }>`\n  font-size: 20px;\n  margin: 5px 0px;\n  color: ${(props) => (props.isPlus ? \"lightgreen\" : \"red\")};\n`;\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<PriceData>(\n    [\"priceInfo\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <Container>\n      {isLoading ? (\n        \"Loading price...\"\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Market Cap:</InfoTitle>\n              <PriceInfo isPlus={true}>\n                ${data?.quotes.USD.market_cap}\n              </PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Price:</InfoTitle>\n              <PriceInfo isPlus={true}>\n                ${data?.quotes.USD.price.toFixed(2)}\n              </PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>High Price:</InfoTitle>\n              <PriceInfo isPlus={true}>\n                ${data?.quotes.USD.ath_price.toFixed(2)}\n              </PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Percent Change(24h):</InfoTitle>\n              <PriceInfo>{data?.quotes.USD.percent_change_24h}%</PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Percent Change(12h):</InfoTitle>\n              <PriceInfo isPlus={true}>\n                {data?.quotes.USD.percent_change_12h}%\n              </PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Percent Change(6h):</InfoTitle>\n              <PriceInfo>{data?.quotes.USD.percent_change_6h}%</PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Percent Change(1h):</InfoTitle>\n              <PriceInfo isPlus={true}>\n                {data?.quotes.USD.percent_change_1h}%\n              </PriceInfo>\n            </OverviewItem>\n          </Overview>\n          <Overview>\n            <OverviewItem>\n              <InfoTitle>Percent Change(30m):</InfoTitle>\n              <PriceInfo isPlus={true}>\n                {data?.quotes.USD.percent_change_30m}%\n              </PriceInfo>\n            </OverviewItem>\n          </Overview>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoins, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BackButton = styled.div`\n  color: ${(props) => props.theme.textColor};\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  text-align: center;\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinsProps {\n  isDark: boolean;\n}\n\nfunction Coin({ isDark }: ICoinsProps) {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  // const [loading, setLoading] = useState(true);\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json(); //캡슐화\n\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <HelmetProvider>\n        <Helmet>\n          <title>\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n          </title>\n        </Helmet>\n      </HelmetProvider>\n      <Header>\n        <Link to=\"/\">\n          <BackButton>\n            <i className=\"fas fa-chevron-left\"></i>\n          </BackButton>\n        </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        {/* state가 존재하면 name을 가져오고, 존재하지 않으면 loading */}\n      </Header>\n      {loading ? (\n        <Loader>Loading..</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart isDark={isDark} coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n  width: 100%;\n  text-align: center;\n`;\n\nconst ModeChangeButton = styled.div`\n  font-size: 25px;\n  cursor: pointer;\n  color: #ee9944;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\nfunction Coins({ toggleDark, isDark }: ICoinsProps) {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  // console.log(coins);\n  return (\n    <Container>\n      <HelmetProvider>\n        <Helmet>\n          <title>코인</title>\n        </Helmet>\n      </HelmetProvider>\n      <Header>\n        <Title>코인</Title>\n        {isDark ? (\n          <ModeChangeButton onClick={toggleDark}>\n            <i className=\"far fa-lightbulb\"></i>\n          </ModeChangeButton>\n        ) : (\n          <ModeChangeButton onClick={toggleDark}>\n            <i className=\"fas fa-lightbulb\"></i>\n          </ModeChangeButton>\n        )}\n      </Header>\n      {isLoading ? (\n        <Loader>Loading..</Loader>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./Coin\";\nimport Coins from \"./Coins\";\n\ninterface IRouterProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\n\nfunction Router({ toggleDark, isDark }: IRouterProps) {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin isDark={isDark} />\n        </Route>\n        <Route path=\"/\">\n          <Coins isDark={isDark} toggleDark={toggleDark} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"lightblue\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./routes/Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na{\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router isDark={isDark} toggleDark={toggleDark} />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}